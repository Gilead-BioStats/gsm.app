% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gsmApp_Server.R
\name{gsmApp_Server}
\alias{gsmApp_Server}
\title{Define Server}
\usage{
gsmApp_Server(
  dfAnalyticsInput,
  dfBounds,
  dfGroups,
  dfMetrics,
  dfResults,
  fnFetchData,
  chrDomains = c("AE", "ENROLL", "LB", "PD", "SDRGCOMP", "STUDCOMP", "SUBJ", "DATACHG",
    "DATAENT", "QUERY"),
  lPlugins = NULL,
  fnServer = NULL
)
}
\arguments{
\item{dfAnalyticsInput}{\code{data.frame} Participant-level metric data.}

\item{dfBounds}{\code{data.frame} Set of predicted percentages/rates and upper-
and lower-bounds across the full range of sample sizes/total exposure
values for reporting.}

\item{dfGroups}{\code{data.frame} Group-level metadata dictionary.}

\item{dfMetrics}{\code{data.frame} Metric-specific metadata for use in charts and
reporting.}

\item{dfResults}{\code{data.frame} A stacked summary of analysis pipeline output.
This will be filtered to cases where \code{GroupLevel == "Site"}.}

\item{fnFetchData}{\code{function} A function that takes a \code{strDomain} argument
and optional \code{strSiteID} and \code{strSubjectID} and returns a data.frame. See
\code{\link[=sample_fnFetchData]{sample_fnFetchData()}} for an example. The returned data.frame contains
information about the named domain.}

\item{chrDomains}{\code{character} A vector of names of domain data.frames to show
in the app. Supported domains are shown in the default value.}

\item{lPlugins}{\code{list} Optional list of plugins to include in the app.}

\item{fnServer}{\code{function} A Shiny server function that takes arguments
\code{input}, \code{output}, and \code{session}. This function will be called at the start
of the main app server function.}
}
\value{
The main server function for use in a shiny app.
}
\description{
Define Server
}
\keyword{internal}
