% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepare_workflow.R
\name{prepare_workflow}
\alias{prepare_workflow}
\title{Prepare {gsm} workflow for Ingestion by {safetyGraphics}}
\usage{
prepare_workflow(
  workflow_id,
  domain_data,
  workflow = yaml::read_yaml(system.file("workflow", glue::glue("{workflow_id}.yaml"),
    package = "gsm")),
  meta = gsmApp::meta_data_frame,
  assessments = system.file("assessments", package = "gsmApp") \%>\%
    list.files(full.names = TRUE) \%>\% map(function(file) {
     name <- file \%>\%
    tools::file_path_sans_ext() \%>\% stringr::str_split_1("/") \%>\% tail(1)
    
    yaml::read_yaml(file) \%>\% list() \%>\% rlang::set_names(name)
 }) \%>\%
    unlist(FALSE),
  thresholds = yaml::read_yaml(system.file("params", "vThreshold.yaml", package =
    "gsmApp"))
)
}
\arguments{
\item{meta}{\code{data.frame} metadata returned by \code{\link[=map_metadata]{map_metadata()}}}

\item{domain}{\code{character} name of data domain associated with workflow}

\item{yaml_file}{\code{character} file path of .yaml file containing workflow metadata}

\item{workflows}{\code{data.frame} metadata returned by \code{\link[=map_metadata]{map_metadata()}}}
}
\description{
Define a chart object with the format expected by {safetyGraphics}, including required data
domains, the charting function, and relevnat metadata.
}
