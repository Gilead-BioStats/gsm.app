% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plugin_Define.R
\name{plugin_Define}
\alias{plugin_Define}
\title{Title}
\usage{
plugin_Define(
  strName,
  chrDomains,
  fnShinyUI,
  fnShinyServer,
  ...,
  chrRequiredInputs = character(),
  lConfig = list(),
  envCall = rlang::caller_env()
)
}
\arguments{
\item{strName}{\verb{length-1 character} The name of the plugin, as it will
display to the user in the menu of tabs and plugins.}

\item{chrDomains}{\code{character} Names of the data domains that are used by the
plugin. Supported values: "AE" (Adverse Events), "DATACHG" (Data Changes),
"DATAENT" (Data Entry), "ENROLL" (Enrollment), "LB" (Lab), "PD" (Protocol
Deviations), "QUERY" (Queries), "STUDCOMP" (Study Completion), "SUBJ"
(Subject Metadata), "SDRGCOMP" (Treatment Completion).}

\item{fnShinyUI}{\verb{function or character} A shiny module UI function for the
plugin, or the name of such a function in the current session.}

\item{fnShinyServer}{\verb{function or character} A shiny module server function
for the plugin, or the name of such a function in the current session.}

\item{...}{These dots are for future extensions and must be empty.}

\item{chrRequiredInputs}{\code{character} An optional vector of any inputs
("Metric", "Site", "Participant", or "Domain") that must have a non-empty
value before the plugin can load. "None" and "All" count as "empty" for
this check. If the user has not set a value for that input, the app will
display a placeholder instructing the user to make a selection.}

\item{lConfig}{\code{list} Optional additional arguments to pass to \code{fnShinyUI}
and \code{fnShinyServer}.}

\item{envCall}{\code{environment} The environment from which this function was
called, for use in better error messages. This value should usually be left
as the default, or passed from the calling function if the calling function
also has an \code{envCall} argument.}
}
\value{
A \code{list} with elements \code{meta}, \code{shiny}, \code{domains}, and (optionally)
\code{required_inputs}.
}
\description{
Title
}
\examples{
aePlugin <- plugin_Define(
  strName = "Adverse Events",
  chrDomains = c("AE", "SUBJ"),
  fnShinyUI = "mod_AE_UI",
  fnShinyServer = "mod_AE_Server"
)
aePlugin
}
