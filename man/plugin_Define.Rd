% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plugin_Define.R
\name{plugin_Define}
\alias{plugin_Define}
\title{Define a plugin}
\usage{
plugin_Define(
  strName,
  lSpec,
  fnShinyUI,
  fnShinyServer,
  ...,
  lWorkflows = list(),
  chrRequiredInputs = character(),
  envCall = rlang::caller_env()
)
}
\arguments{
\item{strName}{\verb{length-1 character} The name of the plugin, as it will
display to the user in the menu of tabs and plugins.}

\item{lSpec}{\code{list} A named list defining the data domains required by the
plugin, where the names are the names of the domains and the elements are
column definitions.}

\item{fnShinyUI}{\verb{function or character} A shiny module UI function for the
plugin, or the name of such a function in the current session.}

\item{fnShinyServer}{\verb{function or character} A shiny module server function
for the plugin, or the name of such a function in the current session.}

\item{...}{Additional named arguments passed on to \code{fnShinyUI} and/or
\code{fnShinyServer} by name.}

\item{lWorkflows}{\code{list} An optional named list of workflows to run in order
to translate app domain data into the format required by the plugin (as
defined in the plugin \code{spec}). These workflows are ran before the plugin's
\code{spec} is applied, and are meant to serve as a bridge between your domain
data and the plugin's expected domains.}

\item{chrRequiredInputs}{\code{character} An optional vector of any inputs
("metric", "group", "group level", "participant", or "domain") that must
have a non-empty value before the plugin can load. "None" and "All" count
as "empty" for this check. If the user has not set a value for that input,
the app will display a placeholder instructing the user to make a
selection.}

\item{envCall}{\code{environment} The environment from which this function was
called, for use in better error messages. This value should usually be left
as the default, or passed from the calling function if the calling function
also has an \code{envCall} argument.}
}
\value{
A \code{list} with elements \code{meta}, \code{shiny}, \code{spec}, \code{workflows},
\code{config}, \code{required_inputs}, and \code{packages}.
}
\description{
Define a plugin
}
\examples{
aePlugin <- plugin_Define(
  strName = "Adverse Events",
  lSpec = list("AE" = list(), "SUBJ" = list()),
  fnShinyUI = "mod_AE_UI",
  fnShinyServer = "mod_AE_Server"
)
aePlugin
}
